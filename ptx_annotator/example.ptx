//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u32 triton__param_2,
	.param .u32 triton__param_3
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<7>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd3, [triton__param_0];
	ld.param.u64 	%rd4, [triton__param_1];
$L__tmp0:
	.loc	1 21 28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 21 33
	shl.b32 	%r7, %r1, 4;
	.loc	1 22 44
	mov.u32 	%r8, %tid.x;
	bfe.u32 	%r9, %r8, 3, 4;
	shl.b32 	%r10, %r8, 1;
	and.b32  	%r11, %r10, 14;
	.loc	1 22 23
	or.b32  	%r12, %r7, %r9;
	or.b32  	%r13, %r7, %r11;
	.loc	1 24 28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 24 33
	shl.b32 	%r14, %r2, 4;
	.loc	1 25 23
	or.b32  	%r15, %r14, %r11;
	or.b32  	%r16, %r14, %r9;
	.loc	1 30 20
	shr.s32 	%r18, %r13, 31;
	shr.u32 	%r19, %r18, 30;
	add.s32 	%r20, %r13, %r19;
	and.b32  	%r21, %r20, -4;
	sub.s32 	%r22, %r13, %r21;
	.loc	1 31 39
	shl.b32 	%r23, %r12, 4;
	.loc	1 31 36
	add.s32 	%r24, %r15, %r23;
	.loc	1 31 30
	mul.wide.s32 	%rd5, %r24, 4;
	add.s64 	%rd1, %rd3, %rd5;
	.loc	1 31 53
	max.s32 	%r25, %r12, %r15;
	setp.lt.s32 	%p1, %r25, 16;
	max.s32 	%r26, %r13, %r16;
	setp.lt.s32 	%p2, %r26, 16;
	.loc	1 31 45
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 32 33
	shl.b32 	%r27, %r16, 2;
	.loc	1 32 31
	add.s32 	%r28, %r27, %r22;
	.loc	1 32 43
	shl.b32 	%r29, %r20, 4;
	and.b32  	%r30, %r29, -64;
	.loc	1 32 40
	add.s32 	%r31, %r28, %r30;
	.loc	1 32 25
	mul.wide.s32 	%rd6, %r31, 4;
	add.s64 	%rd2, %rd4, %rd6;
	.loc	1 32 55
	mad.lo.s32 	%r32, %r11, 18, %r9;
	shl.b32 	%r33, %r32, 2;
	mov.u32 	%r34, global_smem;
	add.s32 	%r35, %r34, %r33;
	st.shared.u32 	[%r35], %r3;
	st.shared.u32 	[%r35+72], %r4;
	bar.sync 	0;
	mad.lo.s32 	%r36, %r9, 18, %r11;
	shl.b32 	%r37, %r36, 2;
	add.s32 	%r38, %r34, %r37;
	ld.shared.v2.u32 	{%r5, %r6}, [%r38];
	// begin inline asm
	@%p2 st.global.v2.b32 [ %rd2 + 0 ], { %r5, %r6 };
	// end inline asm
	.loc	1 32 4
	ret;
$L__tmp1:
$L__func_end0:

}
	.file	1 "/tmp/torchinductor_sahanp/gn/cgnkkvlxxunjljlnn5gvmasbs4f7du7a24mnrzatbcqckahy2mzg.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 122
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 103
.b8 110
.b8 107
.b8 107
.b8 118
.b8 108
.b8 120
.b8 120
.b8 117
.b8 110
.b8 106
.b8 108
.b8 106
.b8 108
.b8 110
.b8 110
.b8 53
.b8 103
.b8 118
.b8 109
.b8 97
.b8 115
.b8 98
.b8 115
.b8 52
.b8 102
.b8 55
.b8 100
.b8 117
.b8 55
.b8 97
.b8 50
.b8 52
.b8 109
.b8 110
.b8 114
.b8 122
.b8 97
.b8 116
.b8 98
.b8 99
.b8 113
.b8 99
.b8 107
.b8 97
.b8 104
.b8 121
.b8 50
.b8 109
.b8 122
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 115
.b8 97
.b8 104
.b8 97
.b8 110
.b8 112
.b8 47
.b8 103
.b8 110
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}